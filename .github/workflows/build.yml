name: build
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        enable_ui: [on]
        include:
          - os: windows-latest
            build_type: Release
            enable_ui: on
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      if: runner.os == 'Linux'
      with:
        键： $ {  { Matrix.os }   } -$ {    { Matrix.enable_ui }    }
    -使用： seamiddleditch/gha-setup-ninja@master
    -使用： ilammy/msvc-dev-cmd@v1
      if    : runner.os == 'Windows'
    -名称：安装依赖项
      外壳： bash
      运行：|
        if [   [    "${{ runner.os }}" == "Linux"    ]   ] ; 然后
          sudo apt-get update-qq
          sudo apt-get install -y \
            libx11-dev libxcursor-dev libxi-dev
        菲
    -名称：生成Makefile
      外壳： bash
      运行：|
        if [   [    "${{ runner.os }}" == "Windows"    ]   ] ; 然后
          导出enable_ccache=关闭
        另外
          导出enable_ccache=on
        菲
        卷曲-L https://github.com/blueloveTH/aseprite/releases/download/v0.01/skia.zip --输出skia.zip
        7z x 滑雪.zip
        cmake -S 。-B 构建 -G 忍者 \
          -DCMAKE_BUILD_TYPE=$ {  {矩阵.build_type }   } \
          -DENABLE_UI=$ {   { Matrix.enable_ui }  } \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=./skia \
          -DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \
          -DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib
    -名称：编译
      外壳： bash
      运行：|
        CD 构建 && 忍者
    -使用： actions/upload-artifact@v3
      与：
        名称：阿赛普瑞特
        路径：D:/a/aseprite/aseprite/build/bin/data
          D:/a/aseprite/aseprite/build/bin/aseprite.exe
